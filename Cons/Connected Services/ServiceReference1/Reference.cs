//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Cons.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CountryModel", Namespace="http://schemas.datacontract.org/2004/07/SakilaWFC.Models")]
    [System.SerializableAttribute()]
    public partial class CountryModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int country_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> last_updateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int country_id {
            get {
                return this.country_idField;
            }
            set {
                if ((this.country_idField.Equals(value) != true)) {
                    this.country_idField = value;
                    this.RaisePropertyChanged("country_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> last_update {
            get {
                return this.last_updateField;
            }
            set {
                if ((this.last_updateField.Equals(value) != true)) {
                    this.last_updateField = value;
                    this.RaisePropertyChanged("last_update");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="country", Namespace="http://schemas.datacontract.org/2004/07/SakilaWFC")]
    [System.SerializableAttribute()]
    public partial class country : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cons.ServiceReference1.city[] cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string country1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short country_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> last_updateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cons.ServiceReference1.city[] city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string country1 {
            get {
                return this.country1Field;
            }
            set {
                if ((object.ReferenceEquals(this.country1Field, value) != true)) {
                    this.country1Field = value;
                    this.RaisePropertyChanged("country1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short country_id {
            get {
                return this.country_idField;
            }
            set {
                if ((this.country_idField.Equals(value) != true)) {
                    this.country_idField = value;
                    this.RaisePropertyChanged("country_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> last_update {
            get {
                return this.last_updateField;
            }
            set {
                if ((this.last_updateField.Equals(value) != true)) {
                    this.last_updateField = value;
                    this.RaisePropertyChanged("last_update");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="city", Namespace="http://schemas.datacontract.org/2004/07/SakilaWFC")]
    [System.SerializableAttribute()]
    public partial class city : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cons.ServiceReference1.address[] addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string city1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int city_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cons.ServiceReference1.country countryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private short country_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime last_updateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cons.ServiceReference1.address[] address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city1 {
            get {
                return this.city1Field;
            }
            set {
                if ((object.ReferenceEquals(this.city1Field, value) != true)) {
                    this.city1Field = value;
                    this.RaisePropertyChanged("city1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int city_id {
            get {
                return this.city_idField;
            }
            set {
                if ((this.city_idField.Equals(value) != true)) {
                    this.city_idField = value;
                    this.RaisePropertyChanged("city_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cons.ServiceReference1.country country {
            get {
                return this.countryField;
            }
            set {
                if ((object.ReferenceEquals(this.countryField, value) != true)) {
                    this.countryField = value;
                    this.RaisePropertyChanged("country");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short country_id {
            get {
                return this.country_idField;
            }
            set {
                if ((this.country_idField.Equals(value) != true)) {
                    this.country_idField = value;
                    this.RaisePropertyChanged("country_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime last_update {
            get {
                return this.last_updateField;
            }
            set {
                if ((this.last_updateField.Equals(value) != true)) {
                    this.last_updateField = value;
                    this.RaisePropertyChanged("last_update");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="address", Namespace="http://schemas.datacontract.org/2004/07/SakilaWFC")]
    [System.SerializableAttribute()]
    public partial class address : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string address1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int address_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cons.ServiceReference1.city cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int city_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cons.ServiceReference1.customer[] customerField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string districtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime last_updateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string postal_codeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address1 {
            get {
                return this.address1Field;
            }
            set {
                if ((object.ReferenceEquals(this.address1Field, value) != true)) {
                    this.address1Field = value;
                    this.RaisePropertyChanged("address1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string address2 {
            get {
                return this.address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.address2Field, value) != true)) {
                    this.address2Field = value;
                    this.RaisePropertyChanged("address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int address_id {
            get {
                return this.address_idField;
            }
            set {
                if ((this.address_idField.Equals(value) != true)) {
                    this.address_idField = value;
                    this.RaisePropertyChanged("address_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cons.ServiceReference1.city city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int city_id {
            get {
                return this.city_idField;
            }
            set {
                if ((this.city_idField.Equals(value) != true)) {
                    this.city_idField = value;
                    this.RaisePropertyChanged("city_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cons.ServiceReference1.customer[] customer {
            get {
                return this.customerField;
            }
            set {
                if ((object.ReferenceEquals(this.customerField, value) != true)) {
                    this.customerField = value;
                    this.RaisePropertyChanged("customer");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string district {
            get {
                return this.districtField;
            }
            set {
                if ((object.ReferenceEquals(this.districtField, value) != true)) {
                    this.districtField = value;
                    this.RaisePropertyChanged("district");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime last_update {
            get {
                return this.last_updateField;
            }
            set {
                if ((this.last_updateField.Equals(value) != true)) {
                    this.last_updateField = value;
                    this.RaisePropertyChanged("last_update");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postal_code {
            get {
                return this.postal_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.postal_codeField, value) != true)) {
                    this.postal_codeField = value;
                    this.RaisePropertyChanged("postal_code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="customer", Namespace="http://schemas.datacontract.org/2004/07/SakilaWFC")]
    [System.SerializableAttribute()]
    public partial class customer : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private Cons.ServiceReference1.address addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int address_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime create_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customer_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string first_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string last_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime last_updateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int store_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string active {
            get {
                return this.activeField;
            }
            set {
                if ((object.ReferenceEquals(this.activeField, value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public Cons.ServiceReference1.address address {
            get {
                return this.addressField;
            }
            set {
                if ((object.ReferenceEquals(this.addressField, value) != true)) {
                    this.addressField = value;
                    this.RaisePropertyChanged("address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int address_id {
            get {
                return this.address_idField;
            }
            set {
                if ((this.address_idField.Equals(value) != true)) {
                    this.address_idField = value;
                    this.RaisePropertyChanged("address_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime create_date {
            get {
                return this.create_dateField;
            }
            set {
                if ((this.create_dateField.Equals(value) != true)) {
                    this.create_dateField = value;
                    this.RaisePropertyChanged("create_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customer_id {
            get {
                return this.customer_idField;
            }
            set {
                if ((this.customer_idField.Equals(value) != true)) {
                    this.customer_idField = value;
                    this.RaisePropertyChanged("customer_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string first_name {
            get {
                return this.first_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.first_nameField, value) != true)) {
                    this.first_nameField = value;
                    this.RaisePropertyChanged("first_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string last_name {
            get {
                return this.last_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.last_nameField, value) != true)) {
                    this.last_nameField = value;
                    this.RaisePropertyChanged("last_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime last_update {
            get {
                return this.last_updateField;
            }
            set {
                if ((this.last_updateField.Equals(value) != true)) {
                    this.last_updateField = value;
                    this.RaisePropertyChanged("last_update");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int store_id {
            get {
                return this.store_idField;
            }
            set {
                if ((this.store_idField.Equals(value) != true)) {
                    this.store_idField = value;
                    this.RaisePropertyChanged("store_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CityModel", Namespace="http://schemas.datacontract.org/2004/07/SakilaWFC.Models")]
    [System.SerializableAttribute()]
    public partial class CityModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string cityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int cityIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int countryIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> last_updateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string city {
            get {
                return this.cityField;
            }
            set {
                if ((object.ReferenceEquals(this.cityField, value) != true)) {
                    this.cityField = value;
                    this.RaisePropertyChanged("city");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int cityId {
            get {
                return this.cityIdField;
            }
            set {
                if ((this.cityIdField.Equals(value) != true)) {
                    this.cityIdField = value;
                    this.RaisePropertyChanged("cityId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int countryId {
            get {
                return this.countryIdField;
            }
            set {
                if ((this.countryIdField.Equals(value) != true)) {
                    this.countryIdField = value;
                    this.RaisePropertyChanged("countryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> last_update {
            get {
                return this.last_updateField;
            }
            set {
                if ((this.last_updateField.Equals(value) != true)) {
                    this.last_updateField = value;
                    this.RaisePropertyChanged("last_update");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AddressModel", Namespace="http://schemas.datacontract.org/2004/07/SakilaWFC.Models")]
    [System.SerializableAttribute()]
    public partial class AddressModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int address_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int city_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string desc_addressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string desc_address2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string districtField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> last_updateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string phoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string postal_codeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int address_id {
            get {
                return this.address_idField;
            }
            set {
                if ((this.address_idField.Equals(value) != true)) {
                    this.address_idField = value;
                    this.RaisePropertyChanged("address_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int city_id {
            get {
                return this.city_idField;
            }
            set {
                if ((this.city_idField.Equals(value) != true)) {
                    this.city_idField = value;
                    this.RaisePropertyChanged("city_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string desc_address {
            get {
                return this.desc_addressField;
            }
            set {
                if ((object.ReferenceEquals(this.desc_addressField, value) != true)) {
                    this.desc_addressField = value;
                    this.RaisePropertyChanged("desc_address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string desc_address2 {
            get {
                return this.desc_address2Field;
            }
            set {
                if ((object.ReferenceEquals(this.desc_address2Field, value) != true)) {
                    this.desc_address2Field = value;
                    this.RaisePropertyChanged("desc_address2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string district {
            get {
                return this.districtField;
            }
            set {
                if ((object.ReferenceEquals(this.districtField, value) != true)) {
                    this.districtField = value;
                    this.RaisePropertyChanged("district");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> last_update {
            get {
                return this.last_updateField;
            }
            set {
                if ((this.last_updateField.Equals(value) != true)) {
                    this.last_updateField = value;
                    this.RaisePropertyChanged("last_update");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string phone {
            get {
                return this.phoneField;
            }
            set {
                if ((object.ReferenceEquals(this.phoneField, value) != true)) {
                    this.phoneField = value;
                    this.RaisePropertyChanged("phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string postal_code {
            get {
                return this.postal_codeField;
            }
            set {
                if ((object.ReferenceEquals(this.postal_codeField, value) != true)) {
                    this.postal_codeField = value;
                    this.RaisePropertyChanged("postal_code");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CustomerModel", Namespace="http://schemas.datacontract.org/2004/07/SakilaWFC.Models")]
    [System.SerializableAttribute()]
    public partial class CustomerModel : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string activeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int address_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> create_dateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int customer_idField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string emailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string first_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string last_nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> last_updateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int store_idField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string active {
            get {
                return this.activeField;
            }
            set {
                if ((object.ReferenceEquals(this.activeField, value) != true)) {
                    this.activeField = value;
                    this.RaisePropertyChanged("active");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int address_id {
            get {
                return this.address_idField;
            }
            set {
                if ((this.address_idField.Equals(value) != true)) {
                    this.address_idField = value;
                    this.RaisePropertyChanged("address_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> create_date {
            get {
                return this.create_dateField;
            }
            set {
                if ((this.create_dateField.Equals(value) != true)) {
                    this.create_dateField = value;
                    this.RaisePropertyChanged("create_date");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int customer_id {
            get {
                return this.customer_idField;
            }
            set {
                if ((this.customer_idField.Equals(value) != true)) {
                    this.customer_idField = value;
                    this.RaisePropertyChanged("customer_id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string email {
            get {
                return this.emailField;
            }
            set {
                if ((object.ReferenceEquals(this.emailField, value) != true)) {
                    this.emailField = value;
                    this.RaisePropertyChanged("email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string first_name {
            get {
                return this.first_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.first_nameField, value) != true)) {
                    this.first_nameField = value;
                    this.RaisePropertyChanged("first_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string last_name {
            get {
                return this.last_nameField;
            }
            set {
                if ((object.ReferenceEquals(this.last_nameField, value) != true)) {
                    this.last_nameField = value;
                    this.RaisePropertyChanged("last_name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> last_update {
            get {
                return this.last_updateField;
            }
            set {
                if ((this.last_updateField.Equals(value) != true)) {
                    this.last_updateField = value;
                    this.RaisePropertyChanged("last_update");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int store_id {
            get {
                return this.store_idField;
            }
            set {
                if ((this.store_idField.Equals(value) != true)) {
                    this.store_idField = value;
                    this.RaisePropertyChanged("store_id");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostrarTodosCountry", ReplyAction="http://tempuri.org/IService1/MostrarTodosCountryResponse")]
        Cons.ServiceReference1.CountryModel[] MostrarTodosCountry(string sortOrder, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostrarTodosCountry", ReplyAction="http://tempuri.org/IService1/MostrarTodosCountryResponse")]
        System.Threading.Tasks.Task<Cons.ServiceReference1.CountryModel[]> MostrarTodosCountryAsync(string sortOrder, string filter);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarCountry", ReplyAction="http://tempuri.org/IService1/InsertarCountryResponse")]
        bool InsertarCountry(Cons.ServiceReference1.country nuevoCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarCountry", ReplyAction="http://tempuri.org/IService1/InsertarCountryResponse")]
        System.Threading.Tasks.Task<bool> InsertarCountryAsync(Cons.ServiceReference1.country nuevoCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerCountry", ReplyAction="http://tempuri.org/IService1/VerCountryResponse")]
        Cons.ServiceReference1.CountryModel VerCountry(int idCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerCountry", ReplyAction="http://tempuri.org/IService1/VerCountryResponse")]
        System.Threading.Tasks.Task<Cons.ServiceReference1.CountryModel> VerCountryAsync(int idCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarCountry", ReplyAction="http://tempuri.org/IService1/ActualizarCountryResponse")]
        bool ActualizarCountry(Cons.ServiceReference1.country countryActualizado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarCountry", ReplyAction="http://tempuri.org/IService1/ActualizarCountryResponse")]
        System.Threading.Tasks.Task<bool> ActualizarCountryAsync(Cons.ServiceReference1.country countryActualizado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BorrarCountry", ReplyAction="http://tempuri.org/IService1/BorrarCountryResponse")]
        bool BorrarCountry(int idCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BorrarCountry", ReplyAction="http://tempuri.org/IService1/BorrarCountryResponse")]
        System.Threading.Tasks.Task<bool> BorrarCountryAsync(int idCountry);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostrarTodosCity", ReplyAction="http://tempuri.org/IService1/MostrarTodosCityResponse")]
        Cons.ServiceReference1.CityModel[] MostrarTodosCity();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostrarTodosCity", ReplyAction="http://tempuri.org/IService1/MostrarTodosCityResponse")]
        System.Threading.Tasks.Task<Cons.ServiceReference1.CityModel[]> MostrarTodosCityAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarCity", ReplyAction="http://tempuri.org/IService1/InsertarCityResponse")]
        bool InsertarCity(Cons.ServiceReference1.city nuevoCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarCity", ReplyAction="http://tempuri.org/IService1/InsertarCityResponse")]
        System.Threading.Tasks.Task<bool> InsertarCityAsync(Cons.ServiceReference1.city nuevoCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerCity", ReplyAction="http://tempuri.org/IService1/VerCityResponse")]
        Cons.ServiceReference1.CityModel VerCity(int idCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/VerCity", ReplyAction="http://tempuri.org/IService1/VerCityResponse")]
        System.Threading.Tasks.Task<Cons.ServiceReference1.CityModel> VerCityAsync(int idCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarCity", ReplyAction="http://tempuri.org/IService1/ActualizarCityResponse")]
        bool ActualizarCity(Cons.ServiceReference1.city cityActualizado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarCity", ReplyAction="http://tempuri.org/IService1/ActualizarCityResponse")]
        System.Threading.Tasks.Task<bool> ActualizarCityAsync(Cons.ServiceReference1.city cityActualizado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BorrarCity", ReplyAction="http://tempuri.org/IService1/BorrarCityResponse")]
        bool BorrarCity(int idCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BorrarCity", ReplyAction="http://tempuri.org/IService1/BorrarCityResponse")]
        System.Threading.Tasks.Task<bool> BorrarCityAsync(int idCity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostrarTodosAddress", ReplyAction="http://tempuri.org/IService1/MostrarTodosAddressResponse")]
        Cons.ServiceReference1.AddressModel[] MostrarTodosAddress();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostrarTodosAddress", ReplyAction="http://tempuri.org/IService1/MostrarTodosAddressResponse")]
        System.Threading.Tasks.Task<Cons.ServiceReference1.AddressModel[]> MostrarTodosAddressAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarAddress", ReplyAction="http://tempuri.org/IService1/InsertarAddressResponse")]
        bool InsertarAddress(Cons.ServiceReference1.address nuevoAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarAddress", ReplyAction="http://tempuri.org/IService1/InsertarAddressResponse")]
        System.Threading.Tasks.Task<bool> InsertarAddressAsync(Cons.ServiceReference1.address nuevoAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarAddress", ReplyAction="http://tempuri.org/IService1/ActualizarAddressResponse")]
        bool ActualizarAddress(Cons.ServiceReference1.address addressActualizado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarAddress", ReplyAction="http://tempuri.org/IService1/ActualizarAddressResponse")]
        System.Threading.Tasks.Task<bool> ActualizarAddressAsync(Cons.ServiceReference1.address addressActualizado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BorrarAddress", ReplyAction="http://tempuri.org/IService1/BorrarAddressResponse")]
        bool BorrarAddress(Cons.ServiceReference1.address delAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BorrarAddress", ReplyAction="http://tempuri.org/IService1/BorrarAddressResponse")]
        System.Threading.Tasks.Task<bool> BorrarAddressAsync(Cons.ServiceReference1.address delAddress);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostrarTodosCustomer", ReplyAction="http://tempuri.org/IService1/MostrarTodosCustomerResponse")]
        Cons.ServiceReference1.CustomerModel[] MostrarTodosCustomer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/MostrarTodosCustomer", ReplyAction="http://tempuri.org/IService1/MostrarTodosCustomerResponse")]
        System.Threading.Tasks.Task<Cons.ServiceReference1.CustomerModel[]> MostrarTodosCustomerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarCustomer", ReplyAction="http://tempuri.org/IService1/InsertarCustomerResponse")]
        bool InsertarCustomer(Cons.ServiceReference1.customer nuevoCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/InsertarCustomer", ReplyAction="http://tempuri.org/IService1/InsertarCustomerResponse")]
        System.Threading.Tasks.Task<bool> InsertarCustomerAsync(Cons.ServiceReference1.customer nuevoCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarCustomer", ReplyAction="http://tempuri.org/IService1/ActualizarCustomerResponse")]
        bool ActualizarCustomer(Cons.ServiceReference1.customer customerActualizado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/ActualizarCustomer", ReplyAction="http://tempuri.org/IService1/ActualizarCustomerResponse")]
        System.Threading.Tasks.Task<bool> ActualizarCustomerAsync(Cons.ServiceReference1.customer customerActualizado);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BorrarCustomer", ReplyAction="http://tempuri.org/IService1/BorrarCustomerResponse")]
        bool BorrarCustomer(Cons.ServiceReference1.customer delCustomer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/BorrarCustomer", ReplyAction="http://tempuri.org/IService1/BorrarCustomerResponse")]
        System.Threading.Tasks.Task<bool> BorrarCustomerAsync(Cons.ServiceReference1.customer delCustomer);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Cons.ServiceReference1.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Cons.ServiceReference1.IService1>, Cons.ServiceReference1.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Cons.ServiceReference1.CountryModel[] MostrarTodosCountry(string sortOrder, string filter) {
            return base.Channel.MostrarTodosCountry(sortOrder, filter);
        }
        
        public System.Threading.Tasks.Task<Cons.ServiceReference1.CountryModel[]> MostrarTodosCountryAsync(string sortOrder, string filter) {
            return base.Channel.MostrarTodosCountryAsync(sortOrder, filter);
        }
        
        public bool InsertarCountry(Cons.ServiceReference1.country nuevoCountry) {
            return base.Channel.InsertarCountry(nuevoCountry);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarCountryAsync(Cons.ServiceReference1.country nuevoCountry) {
            return base.Channel.InsertarCountryAsync(nuevoCountry);
        }
        
        public Cons.ServiceReference1.CountryModel VerCountry(int idCountry) {
            return base.Channel.VerCountry(idCountry);
        }
        
        public System.Threading.Tasks.Task<Cons.ServiceReference1.CountryModel> VerCountryAsync(int idCountry) {
            return base.Channel.VerCountryAsync(idCountry);
        }
        
        public bool ActualizarCountry(Cons.ServiceReference1.country countryActualizado) {
            return base.Channel.ActualizarCountry(countryActualizado);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarCountryAsync(Cons.ServiceReference1.country countryActualizado) {
            return base.Channel.ActualizarCountryAsync(countryActualizado);
        }
        
        public bool BorrarCountry(int idCountry) {
            return base.Channel.BorrarCountry(idCountry);
        }
        
        public System.Threading.Tasks.Task<bool> BorrarCountryAsync(int idCountry) {
            return base.Channel.BorrarCountryAsync(idCountry);
        }
        
        public Cons.ServiceReference1.CityModel[] MostrarTodosCity() {
            return base.Channel.MostrarTodosCity();
        }
        
        public System.Threading.Tasks.Task<Cons.ServiceReference1.CityModel[]> MostrarTodosCityAsync() {
            return base.Channel.MostrarTodosCityAsync();
        }
        
        public bool InsertarCity(Cons.ServiceReference1.city nuevoCity) {
            return base.Channel.InsertarCity(nuevoCity);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarCityAsync(Cons.ServiceReference1.city nuevoCity) {
            return base.Channel.InsertarCityAsync(nuevoCity);
        }
        
        public Cons.ServiceReference1.CityModel VerCity(int idCity) {
            return base.Channel.VerCity(idCity);
        }
        
        public System.Threading.Tasks.Task<Cons.ServiceReference1.CityModel> VerCityAsync(int idCity) {
            return base.Channel.VerCityAsync(idCity);
        }
        
        public bool ActualizarCity(Cons.ServiceReference1.city cityActualizado) {
            return base.Channel.ActualizarCity(cityActualizado);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarCityAsync(Cons.ServiceReference1.city cityActualizado) {
            return base.Channel.ActualizarCityAsync(cityActualizado);
        }
        
        public bool BorrarCity(int idCity) {
            return base.Channel.BorrarCity(idCity);
        }
        
        public System.Threading.Tasks.Task<bool> BorrarCityAsync(int idCity) {
            return base.Channel.BorrarCityAsync(idCity);
        }
        
        public Cons.ServiceReference1.AddressModel[] MostrarTodosAddress() {
            return base.Channel.MostrarTodosAddress();
        }
        
        public System.Threading.Tasks.Task<Cons.ServiceReference1.AddressModel[]> MostrarTodosAddressAsync() {
            return base.Channel.MostrarTodosAddressAsync();
        }
        
        public bool InsertarAddress(Cons.ServiceReference1.address nuevoAddress) {
            return base.Channel.InsertarAddress(nuevoAddress);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarAddressAsync(Cons.ServiceReference1.address nuevoAddress) {
            return base.Channel.InsertarAddressAsync(nuevoAddress);
        }
        
        public bool ActualizarAddress(Cons.ServiceReference1.address addressActualizado) {
            return base.Channel.ActualizarAddress(addressActualizado);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarAddressAsync(Cons.ServiceReference1.address addressActualizado) {
            return base.Channel.ActualizarAddressAsync(addressActualizado);
        }
        
        public bool BorrarAddress(Cons.ServiceReference1.address delAddress) {
            return base.Channel.BorrarAddress(delAddress);
        }
        
        public System.Threading.Tasks.Task<bool> BorrarAddressAsync(Cons.ServiceReference1.address delAddress) {
            return base.Channel.BorrarAddressAsync(delAddress);
        }
        
        public Cons.ServiceReference1.CustomerModel[] MostrarTodosCustomer() {
            return base.Channel.MostrarTodosCustomer();
        }
        
        public System.Threading.Tasks.Task<Cons.ServiceReference1.CustomerModel[]> MostrarTodosCustomerAsync() {
            return base.Channel.MostrarTodosCustomerAsync();
        }
        
        public bool InsertarCustomer(Cons.ServiceReference1.customer nuevoCustomer) {
            return base.Channel.InsertarCustomer(nuevoCustomer);
        }
        
        public System.Threading.Tasks.Task<bool> InsertarCustomerAsync(Cons.ServiceReference1.customer nuevoCustomer) {
            return base.Channel.InsertarCustomerAsync(nuevoCustomer);
        }
        
        public bool ActualizarCustomer(Cons.ServiceReference1.customer customerActualizado) {
            return base.Channel.ActualizarCustomer(customerActualizado);
        }
        
        public System.Threading.Tasks.Task<bool> ActualizarCustomerAsync(Cons.ServiceReference1.customer customerActualizado) {
            return base.Channel.ActualizarCustomerAsync(customerActualizado);
        }
        
        public bool BorrarCustomer(Cons.ServiceReference1.customer delCustomer) {
            return base.Channel.BorrarCustomer(delCustomer);
        }
        
        public System.Threading.Tasks.Task<bool> BorrarCustomerAsync(Cons.ServiceReference1.customer delCustomer) {
            return base.Channel.BorrarCustomerAsync(delCustomer);
        }
    }
}
